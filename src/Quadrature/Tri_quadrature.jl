# Define the quadrature function for any triangular element.
# =============================================
# Triangle integration rule
# =============================================

function integration_rule(element::TriangularElement, order::Int) 
    # Note: The following quadrature rules use barycentric coordinates.
    if order == 1
        points = [(1/3, 1/3)]
        weights = [1.0]
    elseif order == 2
        points = [
            (1/6, 1/6),
            (2/3, 1/6),
            (1/6, 2/3)
        ]
        weights = [1/3, 1/3, 1/3]
    elseif order == 3
        points = [
            (1//3, 1//3),
            (0.470142064105115, 0.470142064105115),
            (0.470142064105115, 0.059715871789770),
            (0.059715871789770, 0.470142064105115),
            (0.101286507323456, 0.101286507323456),
            (0.101286507323456, 0.797426985353087),
            (0.797426985353087, 0.101286507323456)
        ]
        weights = [0.225000000000000,
                   0.132394152788506, 0.132394152788506, 0.132394152788506,
                   0.125939180544827, 0.125939180544827, 0.125939180544827]
    elseif order == 4
        points = [
            (0.1081030182, 0.4459484909),
            (0.4459484909, 0.1081030182),
            (0.4459484909, 0.4459484909),
            (0.8168475729, 0.0915762135),
            (0.0915762135, 0.8168475729),
            (0.0915762135, 0.0915762135)    
        ]
        weights = [0.2233815897, 0.2233815897, 0.2233815897,
                   0.1099517437, 0.1099517437, 0.1099517437]
    elseif order == 5
        points = [
            (1/3, 1/3),
            (0.0597158717, 0.4701420641),
            (0.4701420641, 0.0597158717),
            (0.4701420641, 0.4701420641),
            (0.7974269853, 0.1012865073),   # Fixed 5th point
            (0.1012865073, 0.7974269853),   # Corrected 6th point (was 0.7972865073)
            (0.1012865073, 0.1012865073)
        ]
        weights = [0.225, 0.1323941528, 0.1323941528,
                   0.1323941528, 0.1259391805, 0.1259391805,
                   0.1259391805]
    elseif order == 6
        points = [
            (0.5014265096, 0.2492867452),
            (0.2492867452, 0.5014265096),
            (0.2492867452, 0.2492867452),
            (0.8738219710, 0.0630890145),
            (0.0630890145, 0.8738219710),
            (0.0630890145, 0.0630890145),
            (0.0531450498, 0.3103524510),
            (0.3103524510, 0.0531450498),
            (0.3103524510, 0.6365024992),
            (0.0531450498, 0.6365024992),
            (0.6365024992, 0.0531450498),
            (0.6365024992, 0.3103524510)
        ]
        weights = [0.1167862757, 0.1167862757, 0.1167862757,
                   0.0508449064, 0.0508449064, 0.0508449064,
                   0.0828510756, 0.0828510756, 0.0828510756,
                   0.0828510756, 0.0828510756, 0.0828510756]
    elseif order == 7
        points = [
            (1/3, 1/3),
            (0.4793080678, 0.2603459661),
            (0.2603459661, 0.4793080678),
            (0.2603459661, 0.2603459661),
            (0.8697397942, 0.0651301029),
            (0.0651301029, 0.8697397942),
            (0.0651301029, 0.0651301029),
            (0.0486903154, 0.3128654960),
            (0.3128654960, 0.0486903154),
            (0.3128654960, 0.6384441886),
            (0.0486903154, 0.6384441886),
            (0.6384441886, 0.0486903154),
            (0.6384441886, 0.3128654960)
        ]
        weights = [0.0533472356,
                   0.0771137609, 0.0771137609, 0.0771137609,
                   0.1756152574, 0.1756152574, 0.1756152574,
                   # Note: The last 6 weights are for 6 points
                   0.072757916845420, 0.072757916845420, 0.072757916845420,
                   0.072757916845420, 0.072757916845420, 0.072757916845420]
    elseif order == 8
        points = [
            (1/3, 1/3),
            (0.0814148234, 0.4592925483),
            (0.4592925483, 0.0814148234),
            (0.4592925483, 0.4592925483),
            (0.6588613845, 0.1705693078),
            (0.1705693078, 0.6588613845),
            (0.1705693078, 0.1705693078),
            (0.8989055434, 0.0505472283),
            (0.0505472283, 0.8989055434),
            (0.0505472283, 0.0505472283),
            (0.0083947774, 0.2631128296),
            (0.2631128296, 0.0083947774),
            (0.2631128296, 0.7284923929),
            (0.0083947774, 0.7284923929),
            (0.7284923929, 0.0083947774),
            (0.7284923929, 0.2631128296)
        ]
        weights = [0.1443156077,
                   0.1032173705, 0.1032173705, 0.1032173705,
                   0.0324584976, 0.0324584976, 0.0324584976,
                   0.0950916343, 0.0950916343, 0.0950916343,
                   0.0950916343, 0.0950916343, 0.0950916343,
                   0.0950916343, 0.0950916343, 0.0950916343]
    elseif order == 9
        points = [
            (1/3, 1/3),
            (0.4896825192, 0.2552574954),
            (0.2552574954, 0.4896825192),
            (0.2552574954, 0.2552574954),
            (0.4370895915, 0.1258208170),
            (0.1258208170, 0.4370895915),
            (0.4370895915, 0.4370895915),
            (0.1882035356, 0.6235929288),
            (0.6235929288, 0.1882035356),
            (0.1882035356, 0.1882035356),
            (0.0447295134, 0.9105409732),
            (0.9105409732, 0.0447295134),
            (0.0447295134, 0.0447295134),
            (0.2219629892, 0.0368384121),
            (0.0368384121, 0.2219629892),
            (0.0368384121, 0.7411985987),
            (0.2219629892, 0.7411985987),
            (0.7411985987, 0.2219629892),
            (0.7411985987, 0.0368384121)
        ]
        weights = [0.0971357963,
                   0.0313347002, 0.0313347002, 0.0313347002,
                   0.0778275410, 0.0778275410, 0.0778275410,
                   0.0796477389, 0.0796477389, 0.0796477389,
                   0.0796477389, 0.0796477389, 0.0796477389,
                   0.0796477389, 0.0796477389, 0.0796477389,
                   0.0796477389, 0.0796477389, 0.0796477389]
    elseif order == 10
        points = [
            (1/3, 1/3),                            # 1
            (0.4855776334, 0.2572111833),           # 2
            (0.2572111833, 0.4855776334),           # 3
            (0.2572111833, 0.2572111833),           # 4
            (0.4370895915, 0.1258208170),           # 5
            (0.1258208170, 0.4370895915),           # 6
            (0.4370895915, 0.4370895915),           # 7
            (0.1882035356, 0.6235929288),           # 8
            (0.6235929288, 0.1882035356),           # 9
            (0.1882035356, 0.1882035356),           # 10
            (0.0447295134, 0.9105409732),           # 11
            (0.9105409732, 0.0447295134),           # 12
            (0.0447295134, 0.0447295134),           # 13
            (0.2219629892, 0.0368384121),           # 14
            (0.0368384121, 0.2219629892),           # 15
            (0.0368384121, 0.7411985987),           # 16
            (0.2219629892, 0.7411985987),           # 17
            (0.7411985987, 0.2219629892),           # 18
            (0.7411985987, 0.0368384121),           # 19
            (0.1673426121, 0.3376526338),           # 20
            (0.3376526338, 0.1673426121),           # 21
            (0.3376526338, 0.4940047541),           # 22
            (0.1673426121, 0.4940047541),           # 23
            (0.4940047541, 0.1673426121),           # 24
            (0.4940047541, 0.3376526338)            # 25
        ]
        weights = [
            0.0908179904,                          # 1
            0.0367259576, 0.0367259576, 0.0367259576,  # 2-4
            0.0453210594, 0.0453210594, 0.0453210594,  # 5-7
            # Last 18 points have same weight
            fill(0.0727579160, 18)...              # 8-25
        ]
    else
        error("Order not implemented.")
    end

    # Scale weights to account for reference triangle area (0.5)
    # weights = 0.5 .* weights

    return points, weights
end